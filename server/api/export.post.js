import archiver from 'archiver'

export default defineEventHandler(async (event) => {
  const projectData = await readBody(event)
  
  try {
    // Generate project files
    const files = generateProjectFiles(projectData)
    
    // Create ZIP archive
    const archive = archiver('zip', {
      zlib: { level: 9 }
    })

    // Add files to archive
    Object.entries(files).forEach(([filename, content]) => {
      archive.append(content, { name: filename })
    })

    // Finalize the archive
    await archive.finalize()

    // Set response headers
    setHeaders(event, {
      'Content-Type': 'application/zip',
      'Content-Disposition': `attachment; filename="${projectData.name || 'project'}.zip"`
    })

    // Return the archive stream
    return sendStream(event, archive)
  } catch (error) {
    console.error('Export error:', error)
    throw createError({
      statusCode: 500,
      message: 'Failed to generate export'
    })
  }
})

function generateProjectFiles(projectData) {
  const files = {}
  
  // Generate index.html
  files['index.html'] = generateHTML(projectData)
  
  // Generate styles.css
  files['styles.css'] = generateCSS()
  
  // Generate package.json
  files['package.json'] = JSON.stringify({
    name: projectData.name.toLowerCase().replace(/\s+/g, '-'),
    version: '1.0.0',
    description: 'Generated by OnePage AI Builder',
    scripts: {
      dev: 'vite',
      build: 'vite build',
      preview: 'vite preview'
    },
    devDependencies: {
      'vite': '^5.0.0'
    }
  }, null, 2)
  
  // Generate vite.config.js
  files['vite.config.js'] = `
import { defineConfig } from 'vite'

export default defineConfig({
  base: './'
})
`.trim()
  
  // Generate README
  files['README.md'] = `# ${projectData.name}

Generated by OnePage AI Builder

## Development

\`\`\`bash
npm install
npm run dev
\`\`\`

## Build

\`\`\`bash
npm run build
\`\`\`

## Deploy

The \`dist\` folder can be deployed to any static hosting service.
`
  
  return files
}

function generateHTML(projectData) {
  let html = `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectData.name}</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
`

  projectData.blocks.forEach(block => {
    html += renderBlock(block)
  })

  html += `
</body>
</html>`

  return html
}

function renderBlock(block) {
  const content = block.content

  switch (block.type) {
    case 'hero':
      return `
  <section class="hero">
    <div class="container">
      <h1>${content.title}</h1>
      <p class="subtitle">${content.subtitle}</p>
      <a href="${content.buttonLink}" class="btn btn-primary">${content.buttonText}</a>
    </div>
  </section>
`
    
    case 'features':
      return `
  <section class="features">
    <div class="container">
      <h2>${content.title}</h2>
      <div class="features-grid">
        ${content.features.map(f => `
        <div class="feature">
          <div class="feature-icon">${f.icon}</div>
          <h3>${f.title}</h3>
          <p>${f.description}</p>
        </div>
        `).join('')}
      </div>
    </div>
  </section>
`
    
    case 'cta':
      return `
  <section class="cta">
    <div class="container">
      <h2>${content.title}</h2>
      <p>${content.description}</p>
      <a href="${content.buttonLink}" class="btn btn-primary">${content.buttonText}</a>
    </div>
  </section>
`
    
    case 'pricing':
      return `
  <section class="pricing">
    <div class="container">
      <h2>${content.title}</h2>
      <div class="pricing-grid">
        ${content.plans.map(plan => `
        <div class="plan">
          <h3>${plan.name}</h3>
          <div class="price">${plan.price}</div>
          <ul>
            ${plan.features.map(f => `<li>${f}</li>`).join('')}
          </ul>
          <a href="#" class="btn btn-outline">Choose Plan</a>
        </div>
        `).join('')}
      </div>
    </div>
  </section>
`
    
    case 'testimonials':
      return `
  <section class="testimonials">
    <div class="container">
      <h2>${content.title}</h2>
      <div class="testimonials-grid">
        ${content.testimonials.map(t => `
        <div class="testimonial">
          <div class="avatar">${t.avatar}</div>
          <p class="quote">"${t.text}"</p>
          <p class="author">${t.name}</p>
          <p class="role">${t.role}</p>
        </div>
        `).join('')}
      </div>
    </div>
  </section>
`
    
    case 'contact':
      return `
  <section class="contact">
    <div class="container">
      <h2>${content.title}</h2>
      <p>${content.description}</p>
      <form class="contact-form">
        <input type="text" placeholder="Your Name" required>
        <input type="email" placeholder="Your Email" required>
        <textarea placeholder="Your Message" rows="5" required></textarea>
        <button type="submit" class="btn btn-primary">Send Message</button>
      </form>
    </div>
  </section>
`
    
    case 'footer':
      return `
  <footer class="footer">
    <div class="container">
      <p class="company-name">${content.companyName}</p>
      <p class="copyright">${content.copyright}</p>
      <div class="footer-links">
        ${content.links.map(link => `<a href="${link.url}">${link.text}</a>`).join('')}
      </div>
    </div>
  </footer>
`
    
    default:
      return ''
  }
}

function generateCSS() {
  return `/* OnePage AI Builder - Generated Styles */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --primary-color: #667eea;
  --primary-dark: #5568d3;
  --secondary-color: #764ba2;
  --text-dark: #2d3748;
  --text-light: #718096;
  --bg-light: #f7fafc;
  --white: #ffffff;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  line-height: 1.6;
  color: var(--text-dark);
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
}

section {
  padding: 4rem 0;
}

h1, h2, h3 {
  margin-bottom: 1rem;
  line-height: 1.2;
}

h1 { font-size: 3rem; }
h2 { font-size: 2.5rem; }
h3 { font-size: 1.75rem; }

/* Buttons */
.btn {
  display: inline-block;
  padding: 0.75rem 2rem;
  border-radius: 0.5rem;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s;
  border: none;
  cursor: pointer;
}

.btn-primary {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn-outline {
  background: transparent;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
}

/* Hero Section */
.hero {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
  text-align: center;
  padding: 6rem 0;
}

.hero .subtitle {
  font-size: 1.25rem;
  margin-bottom: 2rem;
  opacity: 0.9;
}

/* Features Section */
.features {
  background: var(--bg-light);
}

.features h2 {
  text-align: center;
  margin-bottom: 3rem;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
}

.feature {
  background: white;
  padding: 2rem;
  border-radius: 0.5rem;
  text-align: center;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s;
}

.feature:hover {
  transform: translateY(-5px);
}

.feature-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

/* CTA Section */
.cta {
  background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: white;
  text-align: center;
}

/* Pricing Section */
.pricing h2 {
  text-align: center;
  margin-bottom: 3rem;
}

.pricing-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 2rem;
}

.plan {
  background: white;
  padding: 2rem;
  border: 2px solid #e2e8f0;
  border-radius: 0.5rem;
  text-align: center;
}

.price {
  font-size: 3rem;
  font-weight: bold;
  color: var(--primary-color);
  margin: 1rem 0;
}

.plan ul {
  list-style: none;
  margin: 2rem 0;
}

.plan li {
  padding: 0.5rem 0;
}

/* Testimonials Section */
.testimonials {
  background: var(--bg-light);
}

.testimonials h2 {
  text-align: center;
  margin-bottom: 3rem;
}

.testimonials-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
}

.testimonial {
  background: white;
  padding: 2rem;
  border-radius: 0.5rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.avatar {
  font-size: 3rem;
  text-align: center;
  margin-bottom: 1rem;
}

.quote {
  font-style: italic;
  margin-bottom: 1rem;
  color: var(--text-light);
}

.author {
  font-weight: bold;
  color: var(--text-dark);
}

.role {
  color: var(--text-light);
  font-size: 0.875rem;
}

/* Contact Section */
.contact {
  text-align: center;
}

.contact-form {
  max-width: 600px;
  margin: 2rem auto 0;
}

.contact-form input,
.contact-form textarea {
  width: 100%;
  padding: 0.75rem;
  margin-bottom: 1rem;
  border: 1px solid #e2e8f0;
  border-radius: 0.375rem;
  font-size: 1rem;
}

.contact-form button {
  width: 100%;
}

/* Footer */
.footer {
  background: #2d3748;
  color: white;
  text-align: center;
  padding: 2rem 0;
}

.company-name {
  font-weight: bold;
  font-size: 1.25rem;
  margin-bottom: 0.5rem;
}

.copyright {
  margin-bottom: 1rem;
  opacity: 0.8;
}

.footer-links {
  display: flex;
  justify-content: center;
  gap: 2rem;
}

.footer-links a {
  color: white;
  text-decoration: none;
  opacity: 0.8;
  transition: opacity 0.3s;
}

.footer-links a:hover {
  opacity: 1;
}

/* Responsive */
@media (max-width: 768px) {
  h1 { font-size: 2rem; }
  h2 { font-size: 1.75rem; }
  h3 { font-size: 1.25rem; }
  
  .features-grid,
  .pricing-grid,
  .testimonials-grid {
    grid-template-columns: 1fr;
  }
}
`
}

